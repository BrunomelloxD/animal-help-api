// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  email_verified Boolean   @default(false)
  name           String
  password       String
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  deleted_at     DateTime?

  reset_token ResetToken[]
  ong Ong[]

  @@map("users")
}

model ResetToken {
  id         String   @id @default(uuid())
  token      String   @unique
  user_id    String
  created_at DateTime @default(now())

  user User @relation(fields: [user_id], references: [id])

  @@map("reset_tokens")
}

model Ong {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  user_id     String

  user User @relation(fields: [user_id], references: [id])

  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?

  @@map("ongs")
}

model City {
  id   Int    @id @default(autoincrement())
  name String

  uf_id Int

  uf Uf @relation(fields: [uf_id], references: [id])

  @@map("cities")
}

model Uf {
  id   Int    @id @default(autoincrement())
  name String
  uf   String @unique

  city City[]

  @@map("ufs")
}
